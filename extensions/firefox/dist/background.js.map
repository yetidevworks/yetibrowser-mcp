{"version":3,"sources":["../../shared/src/background/index.ts"],"sourcesContent":["import type {\n  BridgeClientMessage,\n  BridgeResultMessage,\n  BridgeServerMessage,\n  CommandName,\n  CommandPayload,\n  CommandPayloadMap,\n  CommandResult,\n  ConsoleLogEntry,\n  DomSnapshot,\n  DomSnapshotEntry,\n  PageStateSnapshot,\n} from \"@yetidevworks/shared\";\n\nconst STORAGE_KEYS = {\n  connectedTabId: \"yetibrowser:connectedTabId\",\n  wsPort: \"yetibrowser:wsPort\",\n  wsPortMode: \"yetibrowser:wsPortMode\",\n};\n\nconst DEFAULT_WS_PORT = 9010;\nconst DEFAULT_PORT_MODE = \"auto\" satisfies PortMode;\nconst FALLBACK_WS_PORTS = [\n  9010, 9011, 9012, 9013, 9014, 9015, 9016, 9017, 9018, 9019, 9020,\n];\n\nglobalThis.addEventListener(\n  \"error\",\n  (event) => {\n    const message = typeof event.message === \"string\" ? event.message : \"\";\n    if (message.includes(\"Error in connection establishment: net::ERR_CONNECTION_REFUSED\")) {\n      event.preventDefault();\n      if (\"stopImmediatePropagation\" in event && typeof event.stopImmediatePropagation === \"function\") {\n        event.stopImmediatePropagation();\n      }\n    }\n  },\n  { capture: true },\n);\n\nglobalThis.onerror = (message) => {\n  if (typeof message === \"string\" && message.includes(\"Error in connection establishment: net::ERR_CONNECTION_REFUSED\")) {\n    return true;\n  }\n  return false;\n};\n\nconst originalConsoleError = console.error.bind(console);\nconsole.error = (...args: unknown[]) => {\n  const first = args[0];\n  if (typeof first === \"string\" && first.includes(\"WebSocket connection to 'ws://localhost:\") && first.includes(\"Error in connection establishment: net::ERR_CONNECTION_REFUSED\")) {\n    return;\n  }\n  originalConsoleError(...args);\n};\nconst CONNECT_ATTEMPT_TIMEOUT_MS = 1_000;\nconst AUTO_SCAN_FAST_DELAY_MS = 100;\nconst AUTO_SCAN_SLOW_DELAY_MS = 750;\nconst AUTO_RECOVERY_DELAY_MS = 250;\nconst MANUAL_RETRY_BASE_DELAY_MS = 250;\nconst MANUAL_RETRY_MAX_DELAY_MS = 3_000;\nconst FAILURE_RESET_WINDOW_MS = 10_000;\n\nlet connectedTabId: number | null = null;\nlet wsPort = DEFAULT_WS_PORT;\nlet portMode: PortMode = DEFAULT_PORT_MODE;\nlet socket: WebSocket | null = null;\nlet socketStatus: SocketStatus = \"disconnected\";\nlet keepAliveTimer: ReturnType<typeof setInterval> | null = null;\n\nfunction setSocketStatus(status: SocketStatus): void {\n  if (socketStatus !== status) {\n    socketStatus = status;\n    void updateBadge();\n  }\n}\n\nclass WebSocketConnectionManager {\n  private reconnectTimer: ReturnType<typeof setTimeout> | null = null;\n  private attemptTimer: ReturnType<typeof setTimeout> | null = null;\n  private attemptId = 0;\n  private expectingClose = false;\n  private running = false;\n  private nextAutoIndex = 0;\n  private pendingInitialAutoPort: number | null = null;\n  private lastSuccessfulPort: number | null = null;\n  private preferLastSuccessful = false;\n  private manualPort = DEFAULT_WS_PORT;\n  private failurePort: number | null = null;\n  private failureCount = 0;\n  private lastFailureAt = 0;\n  private scanIterations = 0;\n  private activeSocket: WebSocket | null = null;\n\n  initialize(mode: PortMode, port: number): void {\n    if (mode === \"manual\") {\n      this.manualPort = isValidPort(port) ? port : DEFAULT_WS_PORT;\n      this.pendingInitialAutoPort = null;\n    } else {\n      this.manualPort = DEFAULT_WS_PORT;\n      this.resetAutoSequence(port);\n    }\n    this.resetFailureCounters();\n    this.lastSuccessfulPort = mode === \"auto\" && isAutoPort(port) ? port : null;\n    this.preferLastSuccessful = false;\n  }\n\n  start(): void {\n    if (this.running) {\n      return;\n    }\n    this.running = true;\n    setSocketStatus(\"connecting\");\n    this.scheduleReconnect(0, { reason: \"startup\", preferLastSuccessful: portMode === \"auto\" });\n  }\n\n  setManualMode(port: number, options: { fromStorage?: boolean } = {}): void {\n    this.manualPort = port;\n    this.resetFailureCounters();\n    this.preferLastSuccessful = false;\n    this.pendingInitialAutoPort = null;\n    this.lastSuccessfulPort = null;\n    if (!options.fromStorage) {\n      chrome.storage.local.set({\n        [STORAGE_KEYS.wsPort]: port,\n        [STORAGE_KEYS.wsPortMode]: \"manual\",\n      });\n    }\n    this.triggerReconnect({ immediate: true, reason: \"manual\" });\n  }\n\n  setAutoMode(startPort: number, options: { fromStorage?: boolean } = {}): void {\n    const target = isAutoPort(startPort) ? startPort : DEFAULT_WS_PORT;\n    this.resetAutoSequence(target);\n    this.resetFailureCounters();\n    this.preferLastSuccessful = false;\n    if (!options.fromStorage) {\n      chrome.storage.local.set({\n        [STORAGE_KEYS.wsPort]: target,\n        [STORAGE_KEYS.wsPortMode]: \"auto\",\n      });\n    }\n    this.triggerReconnect({ immediate: true, reason: \"auto\", resetAuto: true });\n  }\n\n  updateManualPortFromStorage(port: number, options: { scheduleReconnect: boolean }): void {\n    this.manualPort = port;\n    this.resetFailureCounters();\n    if (options.scheduleReconnect) {\n      this.triggerReconnect({ immediate: true, reason: \"storage-manual\" });\n    }\n  }\n\n  updateAutoPortFromStorage(port: number, options: { scheduleReconnect: boolean }): void {\n    if (!isAutoPort(port)) {\n      return;\n    }\n    this.resetAutoSequence(port);\n    this.resetFailureCounters();\n    if (options.scheduleReconnect) {\n      this.triggerReconnect({ immediate: true, reason: \"storage-auto\", resetAuto: true });\n    }\n  }\n\n  triggerReconnect(options: {\n    immediate?: boolean;\n    reason?: string;\n    resetAuto?: boolean;\n    preferLastSuccessful?: boolean;\n  } = {}): void {\n    if (!this.running) {\n      this.start();\n    }\n\n    if (options.resetAuto && portMode === \"auto\") {\n      this.resetAutoSequence(wsPort);\n    }\n    if (options.preferLastSuccessful !== undefined) {\n      this.preferLastSuccessful = options.preferLastSuccessful;\n    }\n\n    setSocketStatus(\"connecting\");\n    this.teardownActiveSocket();\n    const delay = options.immediate ? 0 : this.computeDelay();\n    this.scheduleReconnect(delay, {\n      reason: options.reason,\n      preferLastSuccessful: this.preferLastSuccessful,\n    });\n  }\n\n  private scheduleReconnect(\n    delayMs: number,\n    options: { reason?: string; resetAuto?: boolean; preferLastSuccessful?: boolean } = {},\n  ): void {\n    if (!this.running) {\n      return;\n    }\n\n    if (options.resetAuto && portMode === \"auto\") {\n      this.resetAutoSequence(wsPort);\n    }\n    if (options.preferLastSuccessful !== undefined) {\n      this.preferLastSuccessful = options.preferLastSuccessful;\n    }\n\n    if (this.reconnectTimer !== null) {\n      clearTimeout(this.reconnectTimer);\n    }\n\n    this.reconnectTimer = setTimeout(() => {\n      this.reconnectTimer = null;\n      this.beginConnection();\n    }, Math.max(0, delayMs));\n  }\n\n  private beginConnection(): void {\n    if (!this.running) {\n      return;\n    }\n\n    const attemptToken = ++this.attemptId;\n    const port = this.selectNextPort();\n    wsPort = port;\n\n    setSocketStatus(\"connecting\");\n    console.log(`[yetibrowser] connecting to ws://localhost:${port} (mode: ${portMode})`);\n\n    let candidate: WebSocket;\n    try {\n      candidate = new WebSocket(`ws://localhost:${port}`);\n    } catch (error) {\n      console.error(\"[yetibrowser] failed to create WebSocket\", error);\n      this.handleEarlyFailure(port);\n      this.scheduleReconnect(this.computeDelay(), { reason: \"constructor-failed\" });\n      return;\n    }\n\n    this.registerAttemptTimeout(attemptToken, candidate, port);\n\n    candidate.addEventListener(\"open\", () => this.handleOpen(attemptToken, candidate, port));\n    candidate.addEventListener(\"message\", (event) => this.handleMessage(attemptToken, candidate, event.data));\n    candidate.addEventListener(\"close\", (event) => this.handleClose(attemptToken, candidate, port, event));\n    candidate.addEventListener(\"error\", (event) => {\n      if (typeof event.preventDefault === \"function\") {\n        event.preventDefault();\n      }\n      if (\"stopImmediatePropagation\" in event && typeof event.stopImmediatePropagation === \"function\") {\n        event.stopImmediatePropagation();\n      }\n      this.handleError(attemptToken, candidate, port, event);\n    });\n  }\n\n  private handleOpen(token: number, candidate: WebSocket, port: number): void {\n    if (this.attemptId !== token) {\n      return;\n    }\n\n    this.expectingClose = false;\n    this.clearAttemptTimer();\n    this.attachSocket(candidate);\n    this.lastSuccessfulPort = port;\n    this.preferLastSuccessful = true;\n    this.scanIterations = 0;\n    this.resetFailureCounters();\n\n    if (portMode === \"auto\") {\n      this.pendingInitialAutoPort = null;\n    }\n\n    setSocketStatus(\"open\");\n\n    persistWsPortIfNeeded(port).catch((error) => {\n      console.error(\"[yetibrowser] failed to persist websocket port\", error);\n    });\n    sendHello(candidate);\n    startKeepAlive();\n  }\n\n  private handleMessage(token: number, candidate: WebSocket, data: unknown): void {\n    if (this.attemptId !== token || this.activeSocket !== candidate) {\n      return;\n    }\n\n    handleSocketMessage(data).catch((error) => {\n      console.error(\"[yetibrowser] failed to handle message\", error);\n    });\n  }\n\n  private handleClose(token: number, candidate: WebSocket, port: number, event: CloseEvent): void {\n    if (this.attemptId !== token) {\n      return;\n    }\n\n    this.clearAttemptTimer();\n\n    const wasActive = this.activeSocket === candidate;\n    if (wasActive) {\n      console.warn(\n        \"[yetibrowser] MCP socket closed\",\n        JSON.stringify({ code: event.code, reason: event.reason, wasClean: event.wasClean }),\n      );\n      this.detachSocket();\n    }\n\n    const intentional = this.expectingClose;\n    this.expectingClose = false;\n\n    if (intentional) {\n      return;\n    }\n\n    this.recordFailure(port);\n    setSocketStatus(\"connecting\");\n    const preferLast = wasActive && portMode === \"auto\";\n    this.scheduleReconnect(this.computeDelay(), { reason: \"close\", preferLastSuccessful: preferLast });\n  }\n\n  private handleError(token: number, candidate: WebSocket, port: number, event: Event): void {\n    if (this.attemptId !== token) {\n      return;\n    }\n\n    this.recordFailure(port);\n\n    if (this.activeSocket === candidate) {\n      console.debug(\"[yetibrowser] socket error\", {\n        port,\n        readyState: candidate.readyState,\n        type: event.type,\n      });\n    }\n  }\n\n  private handleEarlyFailure(port: number): void {\n    this.recordFailure(port);\n    this.preferLastSuccessful = false;\n  }\n\n  private registerAttemptTimeout(token: number, candidate: WebSocket, port: number): void {\n    this.clearAttemptTimer();\n    this.attemptTimer = setTimeout(() => {\n      if (this.attemptId !== token) {\n        return;\n      }\n      if (candidate.readyState !== WebSocket.CONNECTING) {\n        return;\n      }\n      console.warn(`[yetibrowser] connection attempt on port ${port} timed out`);\n      try {\n        candidate.close();\n      } catch (error) {\n        console.error(\"[yetibrowser] failed to close timed-out socket\", error);\n      }\n    }, CONNECT_ATTEMPT_TIMEOUT_MS);\n  }\n\n  private clearAttemptTimer(): void {\n    if (this.attemptTimer !== null) {\n      clearTimeout(this.attemptTimer);\n      this.attemptTimer = null;\n    }\n  }\n\n  private attachSocket(instance: WebSocket): void {\n    this.activeSocket = instance;\n    socket = instance;\n  }\n\n  private detachSocket(): void {\n    stopKeepAlive();\n    this.activeSocket = null;\n    socket = null;\n  }\n\n  private teardownActiveSocket(): void {\n    this.clearAttemptTimer();\n    if (this.activeSocket) {\n      this.expectingClose = true;\n      try {\n        this.activeSocket.close();\n      } catch (error) {\n        console.error(\"[yetibrowser] failed to close socket\", error);\n      }\n      this.detachSocket();\n    }\n  }\n\n  private selectNextPort(): number {\n    if (portMode === \"manual\") {\n      return this.manualPort;\n    }\n\n    if (this.pendingInitialAutoPort !== null) {\n      const initial = this.pendingInitialAutoPort;\n      this.pendingInitialAutoPort = null;\n      return initial;\n    }\n\n    if (this.preferLastSuccessful && this.lastSuccessfulPort !== null) {\n      this.preferLastSuccessful = false;\n      return this.lastSuccessfulPort;\n    }\n\n    const port = FALLBACK_WS_PORTS[this.nextAutoIndex];\n    this.nextAutoIndex = (this.nextAutoIndex + 1) % FALLBACK_WS_PORTS.length;\n    return port;\n  }\n\n  private resetAutoSequence(startPort: number): void {\n    const target = isAutoPort(startPort) ? startPort : DEFAULT_WS_PORT;\n    const startIndex = FALLBACK_WS_PORTS.indexOf(target);\n    this.pendingInitialAutoPort = target;\n    this.nextAutoIndex = (startIndex + 1) % FALLBACK_WS_PORTS.length;\n  }\n\n  private resetFailureCounters(): void {\n    this.failurePort = null;\n    this.failureCount = 0;\n    this.lastFailureAt = 0;\n    this.scanIterations = 0;\n  }\n\n  private recordFailure(port: number): void {\n    const now = Date.now();\n    if (this.failurePort !== port || now - this.lastFailureAt > FAILURE_RESET_WINDOW_MS) {\n      this.failurePort = port;\n      this.failureCount = 0;\n    }\n    this.failureCount += 1;\n    this.lastFailureAt = now;\n\n    if (this.lastSuccessfulPort === null) {\n      this.scanIterations += 1;\n    }\n\n    if (portMode === \"auto\" && this.failureCount >= 2) {\n      this.preferLastSuccessful = false;\n      if (this.lastSuccessfulPort === port) {\n        this.lastSuccessfulPort = null;\n      }\n    }\n  }\n\n  private computeDelay(): number {\n    if (portMode === \"manual\") {\n      const attempt = Math.min(\n        this.failureCount + 1,\n        Math.ceil(MANUAL_RETRY_MAX_DELAY_MS / MANUAL_RETRY_BASE_DELAY_MS),\n      );\n      return Math.min(MANUAL_RETRY_BASE_DELAY_MS * attempt, MANUAL_RETRY_MAX_DELAY_MS);\n    }\n\n    if (this.lastSuccessfulPort === null) {\n      return this.scanIterations >= FALLBACK_WS_PORTS.length * 3 ? AUTO_SCAN_SLOW_DELAY_MS : AUTO_SCAN_FAST_DELAY_MS;\n    }\n\n    return this.failureCount >= 3 ? AUTO_SCAN_SLOW_DELAY_MS : AUTO_RECOVERY_DELAY_MS;\n  }\n}\n\nconst connectionManager = new WebSocketConnectionManager();\n\nchrome.runtime.onInstalled.addListener(() => {\n  console.log(\"[yetibrowser] extension installed\");\n});\n\nchrome.runtime.onMessage.addListener((message, _sender, sendResponse) => {\n  if (!message || typeof message !== \"object\") {\n    return;\n  }\n\n  if (message.type === \"yetibrowser/connect\") {\n    const { tabId } = message as { tabId: number };\n    setConnectedTab(tabId)\n      .then(() => sendResponse({ ok: true }))\n      .catch((error) => sendResponse({ ok: false, error: error instanceof Error ? error.message : String(error) }));\n    return true;\n  }\n\n  if (message.type === \"yetibrowser/disconnect\") {\n    clearConnectedTab()\n      .then(() => sendResponse({ ok: true }))\n      .catch((error) => sendResponse({ ok: false, error: error instanceof Error ? error.message : String(error) }));\n    return true;\n  }\n\n  if (message.type === \"yetibrowser/getState\") {\n    sendResponse({\n      tabId: connectedTabId,\n      wsPort,\n      socketConnected: socket?.readyState === WebSocket.OPEN,\n      portMode,\n      socketStatus,\n    });\n    return;\n  }\n\n  if (message.type === \"yetibrowser/setPortConfig\") {\n    const { mode, port } = message as { mode: PortMode; port?: number };\n    void setPortConfiguration(mode, port)\n      .then(() => sendResponse({ ok: true }))\n      .catch((error) =>\n        sendResponse({ ok: false, error: error instanceof Error ? error.message : String(error) }),\n      );\n    return true;\n  }\n\n  if (message.type === \"yetibrowser/reconnect\") {\n    triggerManualReconnect();\n    sendResponse({ ok: true });\n    return;\n  }\n});\n\nchrome.storage.onChanged.addListener((changes, area) => {\n  if (area !== \"local\") {\n    return;\n  }\n\n  if (STORAGE_KEYS.connectedTabId in changes) {\n   const value = changes[STORAGE_KEYS.connectedTabId]?.newValue;\n   connectedTabId = typeof value === \"number\" ? value : null;\n   console.log(\"[yetibrowser] connected tab changed\", connectedTabId);\n  }\n  const modeChange = changes[STORAGE_KEYS.wsPortMode];\n  const portChange = changes[STORAGE_KEYS.wsPort];\n\n  if (modeChange) {\n    const parsed = modeChange.newValue === \"manual\" ? \"manual\" : DEFAULT_PORT_MODE;\n    if (parsed !== portMode) {\n      if (parsed === \"manual\") {\n        const rawPort = portChange?.newValue;\n        const manualPort =\n          typeof rawPort === \"number\" && Number.isFinite(rawPort) ? rawPort : wsPort;\n        portMode = \"manual\";\n        wsPort = isValidPort(manualPort) ? manualPort : DEFAULT_WS_PORT;\n        connectionManager.setManualMode(wsPort, { fromStorage: true });\n        setSocketStatus(\"connecting\");\n      } else {\n        const rawPort = portChange?.newValue;\n        const autoPort =\n          typeof rawPort === \"number\" && Number.isFinite(rawPort) ? rawPort : wsPort;\n        portMode = \"auto\";\n        wsPort = isAutoPort(autoPort) ? autoPort : DEFAULT_WS_PORT;\n        connectionManager.setAutoMode(wsPort, { fromStorage: true });\n        setSocketStatus(\"connecting\");\n      }\n    }\n  }\n\n  if (portChange) {\n    const parsed = typeof portChange.newValue === \"number\" && Number.isFinite(portChange.newValue)\n      ? portChange.newValue\n      : DEFAULT_WS_PORT;\n\n    if (parsed === wsPort) {\n      return;\n    }\n\n    wsPort = parsed;\n\n    if (portMode === \"manual\") {\n      connectionManager.updateManualPortFromStorage(parsed, { scheduleReconnect: !modeChange });\n    } else if (portMode === \"auto\") {\n      connectionManager.updateAutoPortFromStorage(parsed, { scheduleReconnect: !modeChange });\n    }\n  }\n});\n\nvoid bootstrap();\n\nasync function bootstrap(): Promise<void> {\n  const stored = await chrome.storage.local.get(STORAGE_KEYS);\n  const storedTabId = stored[STORAGE_KEYS.connectedTabId];\n  const storedPort = stored[STORAGE_KEYS.wsPort];\n  const storedMode = stored[STORAGE_KEYS.wsPortMode];\n\n  if (typeof storedTabId === \"number\") {\n    connectedTabId = storedTabId;\n    await initializeTab(storedTabId);\n  }\n\n  if (storedMode === \"manual\" || storedMode === \"auto\") {\n    portMode = storedMode;\n  }\n\n  if (typeof storedPort === \"number\" && Number.isFinite(storedPort)) {\n    wsPort =\n      portMode === \"auto\" ? (isAutoPort(storedPort) ? storedPort : DEFAULT_WS_PORT) : storedPort;\n  }\n\n  connectionManager.initialize(portMode, wsPort);\n  connectionManager.start();\n}\n\nfunction triggerManualReconnect(): void {\n  const options =\n    portMode === \"auto\"\n      ? { immediate: true, reason: \"manual\", resetAuto: true, preferLastSuccessful: false }\n      : { immediate: true, reason: \"manual\" };\n  connectionManager.triggerReconnect(options);\n}\n\nfunction isAutoPort(port: number): boolean {\n  return FALLBACK_WS_PORTS.includes(port);\n}\n\nasync function persistWsPortIfNeeded(port: number): Promise<void> {\n  if (portMode !== \"auto\") {\n    return;\n  }\n  const stored = await chrome.storage.local.get(STORAGE_KEYS.wsPort);\n  if (stored[STORAGE_KEYS.wsPort] === port) {\n    return;\n  }\n  await chrome.storage.local.set({ [STORAGE_KEYS.wsPort]: port });\n}\n\nasync function setPortConfiguration(mode: PortMode, port: number | undefined): Promise<void> {\n  if (mode === \"manual\") {\n    if (!isValidPort(port)) {\n      throw new Error(\"Port must be an integer between 1 and 65535\");\n    }\n    portMode = \"manual\";\n    wsPort = port!;\n    connectionManager.setManualMode(port!, { fromStorage: false });\n    return;\n  }\n\n  const candidate = typeof port === \"number\" && Number.isInteger(port) ? port : wsPort;\n  portMode = \"auto\";\n  wsPort = isAutoPort(candidate) ? candidate : DEFAULT_WS_PORT;\n  connectionManager.setAutoMode(wsPort, { fromStorage: false });\n}\n\nfunction isValidPort(value: number | undefined): value is number {\n  return typeof value === \"number\" && Number.isInteger(value) && value > 0 && value <= 65535;\n}\n\ntype PortMode = \"auto\" | \"manual\";\ntype SocketStatus = \"disconnected\" | \"connecting\" | \"open\";\n\nfunction sendHello(targetSocket: WebSocket | null = socket): void {\n  if (!targetSocket || targetSocket.readyState !== WebSocket.OPEN) {\n    return;\n  }\n\n  const message: BridgeClientMessage = {\n    type: \"hello\",\n    client: \"yetibrowser-extension\",\n    version: chrome.runtime.getManifest().version,\n  };\n  targetSocket.send(JSON.stringify(message));\n}\n\nfunction startKeepAlive(): void {\n  stopKeepAlive();\n  keepAliveTimer = setInterval(() => {\n    if (!socket || socket.readyState !== WebSocket.OPEN) {\n      return;\n    }\n    const message: BridgeClientMessage = {\n      type: \"event\",\n      event: \"heartbeat\",\n      payload: Date.now(),\n    };\n    socket.send(JSON.stringify(message));\n  }, 20_000);\n}\n\nfunction stopKeepAlive(): void {\n  if (keepAliveTimer !== null) {\n    clearInterval(keepAliveTimer);\n    keepAliveTimer = null;\n  }\n}\n\nasync function handleSocketMessage(data: unknown): Promise<void> {\n  if (!socket) {\n    return;\n  }\n\n  let message: BridgeServerMessage;\n  try {\n    message = JSON.parse(String(data));\n  } catch (error) {\n    console.error(\"[yetibrowser] invalid message from server\", error);\n    return;\n  }\n\n  if (message.type !== \"call\") {\n    console.warn(\"[yetibrowser] unsupported message type\", message);\n    return;\n  }\n\n  try {\n    const result = await dispatchCommand(message.command, message.payload as CommandPayload<CommandName>);\n    respond({\n      type: \"result\",\n      id: message.id,\n      command: message.command,\n      ok: true,\n      result,\n    });\n  } catch (error) {\n    const messageText = error instanceof Error ? error.message : String(error);\n    respond({\n      type: \"result\",\n      id: message.id,\n      command: message.command,\n      ok: false,\n      error: messageText,\n    });\n  }\n}\n\nfunction respond(message: BridgeResultMessage): void {\n  if (!socket || socket.readyState !== WebSocket.OPEN) {\n    return;\n  }\n  socket.send(JSON.stringify(message));\n}\n\nasync function dispatchCommand<K extends CommandName>(\n  command: K,\n  payload: CommandPayload<K>,\n): Promise<CommandResult<K>> {\n  switch (command) {\n    case \"ping\":\n      return { ok: true } as CommandResult<K>;\n    case \"getUrl\":\n      return { url: (await ensureTab()).url ?? \"about:blank\" } as CommandResult<K>;\n    case \"getTitle\":\n      return { title: (await ensureTab()).title ?? \"\" } as CommandResult<K>;\n    case \"snapshot\": {\n      const snapshot = await captureSnapshot();\n      return snapshot as CommandResult<K>;\n    }\n    case \"navigate\": {\n      const { url } = payload as CommandPayloadMap[\"navigate\"];\n      await navigateTo(url);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"goBack\":\n      await goBack();\n      return { ok: true } as CommandResult<K>;\n    case \"goForward\":\n      await goForward();\n      return { ok: true } as CommandResult<K>;\n    case \"wait\": {\n      const { seconds } = payload as CommandPayloadMap[\"wait\"];\n      await delay(seconds * 1000);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"pressKey\": {\n      const { key } = payload as CommandPayloadMap[\"pressKey\"];\n      await simulateKeyPress(key);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"click\": {\n      const { selector, description } = payload as CommandPayloadMap[\"click\"];\n      await clickElement(selector, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"hover\": {\n      const { selector, description } = payload as CommandPayloadMap[\"hover\"];\n      await hoverElement(selector, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"type\": {\n      const { selector, text, submit, description } = payload as CommandPayloadMap[\"type\"];\n      await typeIntoElement(selector, text, submit ?? false, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"selectOption\": {\n      const { selector, values, description } = payload as CommandPayloadMap[\"selectOption\"];\n      await selectOptions(selector, values, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"screenshot\": {\n      const { fullPage } = payload as CommandPayloadMap[\"screenshot\"];\n      const { data, mimeType } = await takeScreenshot(fullPage ?? false);\n      return { data, mimeType } as CommandResult<K>;\n    }\n    case \"getConsoleLogs\": {\n      const logs = await readConsoleLogs();\n      return logs as CommandResult<K>;\n    }\n    case \"pageState\": {\n      const state = await capturePageState();\n      return state as CommandResult<K>;\n    }\n    case \"waitFor\": {\n      const { selector, timeoutMs, visible } = payload as CommandPayloadMap[\"waitFor\"];\n      await waitForSelector(selector, timeoutMs ?? 5_000, visible ?? false);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"fillForm\": {\n      const { fields } = payload as CommandPayloadMap[\"fillForm\"];\n      const result = await fillFormFields(fields ?? []);\n      return result as CommandResult<K>;\n    }\n    case \"evaluate\": {\n      const { script, args, timeoutMs } = payload as CommandPayloadMap[\"evaluate\"];\n      const evaluationPromise = evaluateInPage(script, args);\n      const value =\n        typeof timeoutMs === \"number\" && timeoutMs > 0\n          ? await Promise.race([\n              evaluationPromise,\n              new Promise<unknown>((_, reject) =>\n                setTimeout(\n                  () => reject(new Error(`Script evaluation timed out after ${timeoutMs}ms`)),\n                  timeoutMs,\n                ),\n              ),\n            ])\n          : await evaluationPromise;\n      return { value } as CommandResult<K>;\n    }\n    case \"handleDialog\": {\n      const { action, promptText } = payload as CommandPayloadMap[\"handleDialog\"];\n      await handleJavaScriptDialog(action, promptText);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"drag\": {\n      const { fromSelector, toSelector, steps, description } = payload as CommandPayloadMap[\"drag\"];\n      await dragElement(fromSelector, toSelector, steps ?? 12, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    default:\n      throw new Error(`Unsupported command ${command satisfies never}`);\n  }\n}\n\nasync function ensureTab(): Promise<chrome.tabs.Tab> {\n  if (connectedTabId === null) {\n    throw new Error(\"No tab connected. Open the YetiBrowser popup and connect the target tab.\");\n  }\n\n  try {\n    return await chrome.tabs.get(connectedTabId);\n  } catch (error) {\n    console.warn(\"[yetibrowser] failed to get connected tab\", error);\n    await clearConnectedTab();\n    throw new Error(\"Connected tab is no longer available. Reconnect from the popup and try again.\");\n  }\n}\n\nasync function setConnectedTab(tabId: number): Promise<void> {\n  await chrome.storage.local.set({ [STORAGE_KEYS.connectedTabId]: tabId });\n  connectedTabId = tabId;\n  await initializeTab(tabId);\n  void updateBadge();\n}\n\nasync function clearConnectedTab(): Promise<void> {\n  await chrome.storage.local.remove(STORAGE_KEYS.connectedTabId);\n  connectedTabId = null;\n  void updateBadge();\n}\n\nasync function navigateTo(url: string): Promise<void> {\n  const tab = await ensureTab();\n  await chrome.tabs.update(tab.id!, { url });\n  await waitForTabComplete(tab.id!);\n  await initializeTab(tab.id!);\n}\n\nasync function goBack(): Promise<void> {\n  const tab = await ensureTab();\n  try {\n    await chrome.tabs.goBack(tab.id!);\n  } catch (error) {\n    console.warn(\"[yetibrowser] unable to navigate back\", error);\n  }\n  await waitForTabComplete(tab.id!);\n  await initializeTab(tab.id!);\n}\n\nasync function goForward(): Promise<void> {\n  const tab = await ensureTab();\n  try {\n    await chrome.tabs.goForward(tab.id!);\n  } catch (error) {\n    console.warn(\"[yetibrowser] unable to navigate forward\", error);\n  }\n  await waitForTabComplete(tab.id!);\n  await initializeTab(tab.id!);\n}\n\nasync function waitForTabComplete(tabId: number): Promise<void> {\n  const tab = await chrome.tabs.get(tabId);\n  if (tab.status === \"complete\") {\n    return;\n  }\n\n  await new Promise<void>((resolve) => {\n    const listener = (updatedTabId: number, info: chrome.tabs.TabChangeInfo) => {\n      if (updatedTabId === tabId && info.status === \"complete\") {\n        chrome.tabs.onUpdated.removeListener(listener);\n        resolve();\n      }\n    };\n    chrome.tabs.onUpdated.addListener(listener);\n  });\n}\n\nasync function captureSnapshot(): Promise<{ formatted: string; raw: DomSnapshot }> {\n  const tab = await ensureTab();\n  const results = await chrome.scripting.executeScript({\n    target: { tabId: tab.id! },\n    func: collectSnapshot,\n  });\n\n  const scriptResult = results[0]?.result as { snapshot: DomSnapshot } | string | undefined;\n  if (!scriptResult || typeof scriptResult === \"string\") {\n    const fallback: DomSnapshot = {\n      title: tab.title ?? \"\",\n      url: tab.url ?? \"about:blank\",\n      capturedAt: new Date().toISOString(),\n      entries: [],\n    };\n    return {\n      formatted: typeof scriptResult === \"string\" ? scriptResult : formatSnapshot(fallback),\n      raw: fallback,\n    };\n  }\n\n  const snapshot = scriptResult.snapshot;\n  if (!snapshot.capturedAt) {\n    snapshot.capturedAt = new Date().toISOString();\n  }\n  return {\n    formatted: formatSnapshot(snapshot),\n    raw: snapshot,\n  };\n}\n\nasync function capturePageState(): Promise<PageStateSnapshot> {\n  const fallback: PageStateSnapshot = {\n    forms: [],\n    localStorage: [],\n    sessionStorage: [],\n    cookies: [],\n    capturedAt: new Date().toISOString(),\n  };\n\n  const response = await runInPage(() => {\n    const computeSelector = (element: Element): string => {\n      if (element.id) {\n        return `#${element.id}`;\n      }\n\n      const parts: string[] = [];\n      let current: Element | null = element;\n\n      while (current && parts.length < 5) {\n        const tag = current.tagName.toLowerCase();\n        const classes = (current.className || \"\")\n          .toString()\n          .split(/\\s+/)\n          .filter(Boolean)\n          .slice(0, 2)\n          .map((cls) => cls.replace(/[^a-zA-Z0-9_-]/g, \"\"))\n          .filter(Boolean);\n        let part = tag;\n        if (classes.length) {\n          part += `.${classes.join(\".\")}`;\n        }\n        const parent = current.parentElement;\n        if (parent) {\n          const siblings = Array.from(parent.children).filter((child) => child.tagName === current!.tagName);\n          if (siblings.length > 1) {\n            const index = siblings.indexOf(current) + 1;\n            part += `:nth-of-type(${index})`;\n          }\n        }\n        parts.push(part);\n        current = current.parentElement;\n      }\n\n      return parts.reverse().join(\" > \");\n    };\n\n    const readStorage = (storage: Storage) => {\n      const entries: Array<{ key: string; value: string }> = [];\n      const limit = Math.min(storage.length, 100);\n      for (let index = 0; index < limit; index += 1) {\n        const key = storage.key(index);\n        if (!key) {\n          continue;\n        }\n        try {\n          const value = storage.getItem(key) ?? \"\";\n          entries.push({ key, value });\n        } catch (error) {\n          entries.push({ key, value: \"<unavailable>\" });\n        }\n      }\n      return entries;\n    };\n\n    const readCookies = () => {\n      const raw = document.cookie;\n      if (!raw) {\n        return [] as Array<{ key: string; value: string }>;\n      }\n      return raw.split(\";\").slice(0, 50).map((part) => {\n        const [name, ...rest] = part.split(\"=\");\n        return { key: name.trim(), value: rest.join(\"=\").trim() };\n      });\n    };\n\n    const forms = Array.from(document.querySelectorAll(\"form\"))\n      .slice(0, 25)\n      .map((form) => {\n        const fields: Array<{ selector: string; name?: string; type?: string; value?: string; label?: string }> = [];\n        const elements = Array.from(form.elements ?? []).slice(0, 50);\n\n        for (const element of elements) {\n          if (\n            !(\n              element instanceof HTMLInputElement ||\n              element instanceof HTMLTextAreaElement ||\n              element instanceof HTMLSelectElement\n            )\n          ) {\n            continue;\n          }\n\n          const selector = computeSelector(element);\n          const base: { selector: string; name?: string; type?: string; value?: string; label?: string } = {\n            selector,\n            name: element.getAttribute(\"name\") ?? undefined,\n          };\n\n          if (element instanceof HTMLInputElement) {\n            base.type = element.type;\n            if (element.type === \"password\") {\n              base.value = \"[redacted]\";\n            } else if (element.type === \"file\") {\n              base.value = element.files?.length ? `${element.files.length} file(s)` : \"\";\n            } else {\n              base.value = element.value;\n            }\n            base.label = element.labels?.[0]?.innerText.trim() || element.placeholder || undefined;\n          } else if (element instanceof HTMLTextAreaElement) {\n            base.type = \"textarea\";\n            base.value = element.value;\n            base.label = element.labels?.[0]?.innerText.trim() || element.placeholder || undefined;\n          } else if (element instanceof HTMLSelectElement) {\n            base.type = \"select\";\n            base.value = Array.from(element.selectedOptions)\n              .map((option) => option.value || option.label)\n              .join(\", \");\n            base.label = element.labels?.[0]?.innerText.trim() || undefined;\n          }\n\n          fields.push(base);\n        }\n\n        return {\n          selector: computeSelector(form),\n          name: form.getAttribute(\"name\") ?? undefined,\n          method: form.getAttribute(\"method\")?.toUpperCase() ?? undefined,\n          action: form.getAttribute(\"action\") ?? undefined,\n          fields,\n        };\n      });\n\n    const snapshot: PageStateSnapshot = {\n      forms,\n      localStorage: readStorage(window.localStorage),\n      sessionStorage: readStorage(window.sessionStorage),\n      cookies: readCookies(),\n      capturedAt: new Date().toISOString(),\n    };\n\n    return { ok: true, value: snapshot } as const;\n  }, []);\n\n  return response ?? fallback;\n}\n\nfunction collectSnapshot(): { snapshot: DomSnapshot } {\n  function computeSelector(element: Element): string {\n    if (element.id) {\n      return `#${element.id}`;\n    }\n\n    const parts: string[] = [];\n    let current: Element | null = element;\n\n    while (current && parts.length < 5) {\n      const tag = current.tagName.toLowerCase();\n      const classes = (current.className || \"\")\n        .toString()\n        .split(/\\s+/)\n        .filter(Boolean)\n        .slice(0, 2)\n        .map((cls) => cls.replace(/[^a-zA-Z0-9_-]/g, \"\"))\n        .filter(Boolean);\n      let part = tag;\n      if (classes.length) {\n        part += `.${classes.join(\".\")}`;\n      }\n      const parent = current.parentElement;\n      if (parent) {\n        const siblings = Array.from(parent.children).filter((child) => child.tagName === current!.tagName);\n        if (siblings.length > 1) {\n          const index = siblings.indexOf(current) + 1;\n          part += `:nth-of-type(${index})`;\n        }\n      }\n      parts.push(part);\n      current = current.parentElement;\n    }\n\n    return parts.reverse().join(\" > \");\n  }\n\n  function makeName(element: Element): string {\n    if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n      return element.placeholder || element.value || element.name || element.id || element.type;\n    }\n\n    if (element instanceof HTMLSelectElement) {\n      return element.options[element.selectedIndex]?.label || element.name || element.id || \"select\";\n    }\n\n    const text = element.textContent?.trim();\n    if (text) {\n      return text.slice(0, 160);\n    }\n\n    return element.getAttribute(\"aria-label\") || element.getAttribute(\"title\") || element.tagName.toLowerCase();\n  }\n\n  const targets = Array.from(\n    document.querySelectorAll(\"a, button, input, textarea, select, [role='button'], [role='link']\"),\n  ) as Element[];\n\n  const entries: DomSnapshotEntry[] = targets.slice(0, 100).map((element) => ({\n    selector: computeSelector(element),\n    role: element.getAttribute(\"role\") ?? element.tagName.toLowerCase(),\n    name: makeName(element),\n  }));\n\n  return {\n    snapshot: {\n      title: document.title,\n      url: location.href,\n      capturedAt: new Date().toISOString(),\n      entries,\n    },\n  };\n}\n\nfunction formatSnapshot(snapshot: DomSnapshot): string {\n  const lines: string[] = [];\n  lines.push(`title: ${snapshot.title}`);\n  lines.push(`url: ${snapshot.url}`);\n  lines.push(`capturedAt: ${snapshot.capturedAt}`);\n  lines.push(\"elements:\");\n  for (const entry of snapshot.entries) {\n    lines.push(`  - selector: \"${entry.selector.replace(/\"/g, '\\\\\"')}\"`);\n    lines.push(`    role: ${entry.role}`);\n    lines.push(`    name: \"${entry.name.replace(/\"/g, '\\\\\"')}\"`);\n  }\n  return lines.join(\"\\n\");\n}\n\nfunction delay(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\ntype ScriptResponse<R> = { ok: true; value?: R } | { error: string };\n\ntype FillFormFieldRequest = CommandPayloadMap[\"fillForm\"][\"fields\"][number];\n\nasync function runInPage<A extends unknown[], R>(\n  func: (...args: A) => ScriptResponse<R> | Promise<ScriptResponse<R>>,\n  args: A,\n): Promise<R | undefined> {\n  const tab = await ensureTab();\n  const [execution] = await chrome.scripting.executeScript({\n    target: { tabId: tab.id! },\n    func,\n    args,\n    world: \"MAIN\",\n  });\n\n  const response = execution?.result as ScriptResponse<R> | undefined;\n  if (!response) {\n    throw new Error(\"Injected script did not return a result\");\n  }\n  if (\"error\" in response) {\n    throw new Error(response.error);\n  }\n  return response.value;\n}\n\nasync function waitForSelector(\n  selector: string,\n  timeoutMs: number,\n  requireVisible: boolean,\n): Promise<void> {\n  await runInPage(\n    (sel: string, timeout: number, visible: boolean) => {\n      const deadline = timeout > 0 ? Date.now() + timeout : Number.POSITIVE_INFINITY;\n      const visibilityCheck = (element: Element) => {\n        if (!visible) {\n          return true;\n        }\n        const rect = element.getBoundingClientRect();\n        if (rect.width === 0 || rect.height === 0) {\n          return false;\n        }\n        const style = window.getComputedStyle(element);\n        if (style.visibility === \"hidden\" || style.display === \"none\" || Number(style.opacity) === 0) {\n          return false;\n        }\n        return true;\n      };\n\n      const locate = () => {\n        const element = document.querySelector(sel);\n        if (!element) {\n          return null;\n        }\n        if (!visibilityCheck(element)) {\n          return null;\n        }\n        return element;\n      };\n\n      return new Promise<ScriptResponse<void>>((resolve) => {\n        const existing = locate();\n        if (existing) {\n          resolve({ ok: true });\n          return;\n        }\n\n        const abort = () => {\n          observer.disconnect();\n          clearInterval(intervalId);\n        };\n\n        const observer = new MutationObserver(() => {\n          const match = locate();\n          if (match) {\n            abort();\n            resolve({ ok: true });\n          }\n        });\n\n        observer.observe(document.documentElement, {\n          childList: true,\n          subtree: true,\n          attributes: visible,\n          attributeFilter: visible ? [\"style\", \"class\", \"hidden\", \"aria-hidden\"] : undefined,\n        });\n\n        const intervalId = window.setInterval(() => {\n          const match = locate();\n          if (match) {\n            abort();\n            resolve({ ok: true });\n            return;\n          }\n          if (Date.now() > deadline) {\n            abort();\n            resolve({ error: `Timed out after ${timeout}ms waiting for selector ${sel}` });\n          }\n        }, 50);\n\n        if (!Number.isFinite(deadline)) {\n          // No timeout configured; keep a lightweight RAF poll to ensure resolution.\n          const frameCheck = () => {\n            const match = locate();\n            if (match) {\n              abort();\n              resolve({ ok: true });\n              return;\n            }\n            window.requestAnimationFrame(frameCheck);\n          };\n          window.requestAnimationFrame(frameCheck);\n        }\n      });\n    },\n    [selector, timeoutMs, requireVisible],\n  );\n}\n\nasync function fillFormFields(\n  fields: FillFormFieldRequest[],\n): Promise<{ filled: number; attempted: number; errors: string[] }> {\n  let filled = 0;\n  const errors: string[] = [];\n  const submitSelectors = new Set<string>();\n\n  for (const field of fields) {\n    try {\n      const description = field.description ?? field.selector;\n      const targetType = field.type ?? \"auto\";\n\n      if (Array.isArray(field.values) && field.values.length > 0) {\n        await selectOptions(field.selector, field.values, field.description);\n        filled++;\n      } else if (targetType === \"select\" && typeof field.value !== \"undefined\") {\n        await selectOptions(field.selector, [String(field.value)], field.description);\n        filled++;\n      } else if (typeof field.value === \"boolean\" || targetType === \"checkbox\") {\n        const desired = typeof field.value === \"boolean\" ? field.value : coerceBoolean(field.value);\n        await setCheckboxState(field.selector, desired, description);\n        filled++;\n      } else if (targetType === \"radio\") {\n        await setRadioState(field.selector, field.value, description);\n        filled++;\n      } else {\n        const text =\n          field.value === null || typeof field.value === \"undefined\" ? \"\" : String(field.value);\n        await typeIntoElement(field.selector, text, false, field.description);\n        filled++;\n      }\n\n      if (field.submit) {\n        submitSelectors.add(field.selector);\n      }\n    } catch (error) {\n      errors.push(\n        error instanceof Error ? error.message : `Failed to fill ${field.selector}: ${String(error)}`,\n      );\n    }\n  }\n\n  for (const selector of submitSelectors) {\n    try {\n      await submitContainingForm(selector);\n    } catch (error) {\n      errors.push(\n        error instanceof Error\n          ? error.message\n          : `Failed to submit form for ${selector}: ${String(error)}`,\n      );\n    }\n  }\n\n  return { filled, attempted: fields.length, errors };\n}\n\nfunction coerceBoolean(value: unknown): boolean {\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"number\") {\n    return value !== 0;\n  }\n  if (typeof value === \"string\") {\n    const normalized = value.trim().toLowerCase();\n    return [\"true\", \"1\", \"yes\", \"on\"].includes(normalized);\n  }\n  return false;\n}\n\nasync function setCheckboxState(selector: string, checked: boolean, description?: string): Promise<void> {\n  await runInPage(\n    (sel: string, state: boolean, label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!(element instanceof HTMLInputElement) || element.type !== \"checkbox\") {\n        return { error: `Element is not a checkbox: ${label ?? sel}` };\n      }\n      if (element.checked === state) {\n        return { ok: true };\n      }\n      element.checked = state;\n      element.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n      return { ok: true };\n    },\n    [selector, checked, description ?? null],\n  );\n}\n\nasync function setRadioState(selector: string, value: unknown, description?: string): Promise<void> {\n  await runInPage(\n    (sel: string, selected: unknown, label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!(element instanceof HTMLInputElement) || element.type !== \"radio\") {\n        return { error: `Element is not a radio button: ${label ?? sel}` };\n      }\n      if (typeof selected === \"string\" || typeof selected === \"number\") {\n        const stringValue = String(selected);\n        element.checked = element.value === stringValue;\n      } else if (typeof selected === \"boolean\") {\n        element.checked = selected;\n      } else {\n        element.checked = true;\n      }\n      element.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n      return { ok: true };\n    },\n    [selector, value, description ?? null],\n  );\n}\n\nasync function submitContainingForm(selector: string): Promise<void> {\n  await runInPage(\n    (sel: string) => {\n      const element = document.querySelector(sel);\n      if (!element) {\n        return { error: `Element not found: ${sel}` };\n      }\n      const form =\n        element instanceof HTMLFormElement\n          ? element\n          : element.closest(\"form\") ?? undefined;\n      if (!form) {\n        return { error: \"No containing form to submit\" };\n      }\n      if (typeof form.requestSubmit === \"function\") {\n        form.requestSubmit();\n      } else {\n        form.submit();\n      }\n      return { ok: true };\n    },\n    [selector],\n  );\n}\n\nasync function evaluateInPage(\n  script: string,\n  args: unknown[] | undefined,\n): Promise<unknown> {\n  return await runInPage(\n    async (source: string, functionArgs: unknown[]) => {\n      let fn: unknown;\n      try {\n        fn = globalThis.eval(`(${source})`);\n      } catch (error) {\n        return {\n          error: `Failed to parse script: ${error instanceof Error ? error.message : String(error)}`,\n        };\n      }\n      if (typeof fn !== \"function\") {\n        return { error: \"Script must evaluate to a function\" };\n      }\n\n      try {\n        const result = await (fn as (...innerArgs: unknown[]) => unknown)(...functionArgs);\n        let cloned: unknown;\n        if (typeof structuredClone === \"function\") {\n          cloned = structuredClone(result);\n        } else {\n          cloned = JSON.parse(JSON.stringify(result));\n        }\n        return { ok: true, value: cloned };\n      } catch (error) {\n        return { error: error instanceof Error ? error.message : String(error) };\n      }\n    },\n    [script, args ?? []],\n  );\n}\n\nasync function handleJavaScriptDialog(action: \"accept\" | \"dismiss\", promptText?: string): Promise<void> {\n  const tab = await ensureTab();\n  const target: chrome.debugger.Debuggee = { tabId: tab.id! };\n  await attachDebugger(target);\n  try {\n    await sendDebuggerCommand(target, \"Page.enable\");\n    await sendDebuggerCommand(target, \"Page.handleJavaScriptDialog\", {\n      accept: action === \"accept\",\n      promptText,\n    });\n  } catch (error) {\n    throw new Error(\n      error instanceof Error ? error.message : `Failed to handle dialog: ${String(error)}`,\n    );\n  } finally {\n    await detachDebugger(target);\n  }\n}\n\nasync function dragElement(\n  fromSelector: string,\n  toSelector: string,\n  steps: number,\n  description?: string,\n): Promise<void> {\n  const resolvedSteps =\n    typeof steps === \"number\" && Number.isFinite(steps) ? Math.max(1, Math.floor(steps)) : 12;\n  await runInPage(\n    (\n      sourceSelector: string,\n      targetSelector: string,\n      stepCount: number,\n      label: string | null,\n    ) => {\n      const source = document.querySelector(sourceSelector);\n      const target = document.querySelector(targetSelector);\n      if (!source || !(source instanceof HTMLElement)) {\n        return { error: `Drag source not found: ${label ?? sourceSelector}` };\n      }\n      if (!target || !(target instanceof HTMLElement)) {\n        return { error: `Drop target not found: ${label ?? targetSelector}` };\n      }\n\n      const startRect = source.getBoundingClientRect();\n      const endRect = target.getBoundingClientRect();\n      const startX = startRect.left + startRect.width / 2;\n      const startY = startRect.top + startRect.height / 2;\n      const endX = endRect.left + endRect.width / 2;\n      const endY = endRect.top + endRect.height / 2;\n\n      const dataTransfer = typeof DataTransfer === \"function\" ? new DataTransfer() : undefined;\n      const pointerId = 1;\n\n      const firePointerEvent = (type: string, x: number, y: number, buttons: number) => {\n        const targetElement = document.elementFromPoint(x, y) as HTMLElement | null;\n        (targetElement ?? document.body).dispatchEvent(\n          new PointerEvent(type, {\n            bubbles: true,\n            cancelable: true,\n            pointerId,\n            pointerType: \"mouse\",\n            clientX: x,\n            clientY: y,\n            buttons,\n          }),\n        );\n      };\n\n      const fireDragEvent = (element: HTMLElement, type: string, x: number, y: number) => {\n        if (typeof DragEvent !== \"function\") {\n          return;\n        }\n        element.dispatchEvent(\n          new DragEvent(type, {\n            bubbles: true,\n            cancelable: true,\n            clientX: x,\n            clientY: y,\n            dataTransfer,\n          }),\n        );\n      };\n\n      firePointerEvent(\"pointerover\", startX, startY, 0);\n      firePointerEvent(\"pointerenter\", startX, startY, 0);\n      firePointerEvent(\"pointerdown\", startX, startY, 1);\n      source.dispatchEvent(\n        new MouseEvent(\"mousedown\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: startX,\n          clientY: startY,\n          buttons: 1,\n        }),\n      );\n      fireDragEvent(source, \"dragstart\", startX, startY);\n\n      const totalSteps =\n        typeof stepCount === \"number\" && Number.isFinite(stepCount) && stepCount > 0\n          ? Math.floor(stepCount)\n          : 12;\n      for (let i = 1; i <= totalSteps; i++) {\n        const progress = i / totalSteps;\n        const currentX = startX + (endX - startX) * progress;\n        const currentY = startY + (endY - startY) * progress;\n        firePointerEvent(\"pointermove\", currentX, currentY, 1);\n        fireDragEvent(target, \"dragover\", currentX, currentY);\n      }\n\n      fireDragEvent(target, \"drop\", endX, endY);\n      firePointerEvent(\"pointerup\", endX, endY, 0);\n      target.dispatchEvent(\n        new MouseEvent(\"mouseup\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: endX,\n          clientY: endY,\n          buttons: 0,\n        }),\n      );\n      firePointerEvent(\"pointerout\", endX, endY, 0);\n      firePointerEvent(\"pointerleave\", endX, endY, 0);\n\n      return { ok: true };\n    },\n    [fromSelector, toSelector, resolvedSteps, description ?? null],\n  );\n}\n\nasync function simulateKeyPress(key: string): Promise<void> {\n  await runInPage(\n    (keyValue: string) => {\n      const active = document.activeElement as HTMLElement | null;\n      if (!active) {\n        return { error: \"No element is focused\" };\n      }\n      const init: KeyboardEventInit = { key: keyValue, bubbles: true, cancelable: true };\n      active.dispatchEvent(new KeyboardEvent(\"keydown\", init));\n      active.dispatchEvent(new KeyboardEvent(\"keypress\", init));\n      active.dispatchEvent(new KeyboardEvent(\"keyup\", init));\n      return { ok: true };\n    },\n    [key],\n  );\n}\n\nasync function clickElement(selector: string, description?: string): Promise<void> {\n  await runInPage(\n    (sel: string, label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!element || !(element instanceof HTMLElement)) {\n        return { error: `Element not found: ${label ?? sel}` };\n      }\n      element.focus({ preventScroll: false });\n      element.dispatchEvent(new MouseEvent(\"mousedown\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new MouseEvent(\"mouseup\", { bubbles: true, cancelable: true }));\n      element.click();\n      return { ok: true };\n    },\n    [selector, description ?? null],\n  );\n}\n\nasync function hoverElement(selector: string, description?: string): Promise<void> {\n  await runInPage(\n    (sel: string, label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!element || !(element instanceof HTMLElement)) {\n        return { error: `Element not found: ${label ?? sel}` };\n      }\n      element.dispatchEvent(new MouseEvent(\"mouseover\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new MouseEvent(\"mousemove\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new MouseEvent(\"mouseenter\", { bubbles: true, cancelable: true }));\n      return { ok: true };\n    },\n    [selector, description ?? null],\n  );\n}\n\nasync function typeIntoElement(\n  selector: string,\n  text: string,\n  submit: boolean,\n  description?: string,\n): Promise<void> {\n  await runInPage(\n    (sel: string, value: string, shouldSubmit: boolean, label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!element || !(element instanceof HTMLElement)) {\n        return { error: `Element not found: ${label ?? sel}` };\n      }\n\n      if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n        element.focus({ preventScroll: false });\n        element.value = value;\n        element.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n        element.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n      } else if (element.isContentEditable) {\n        element.focus({ preventScroll: false });\n        element.textContent = value;\n        element.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n      } else {\n        return { error: \"Element is not editable\" };\n      }\n\n      if (shouldSubmit) {\n        const init: KeyboardEventInit = { key: \"Enter\", bubbles: true, cancelable: true };\n        element.dispatchEvent(new KeyboardEvent(\"keydown\", init));\n        element.dispatchEvent(new KeyboardEvent(\"keyup\", init));\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n          element.form?.dispatchEvent(new Event(\"submit\", { bubbles: true, cancelable: true }));\n        }\n      }\n\n      return { ok: true };\n    },\n    [selector, text, submit, description ?? null],\n  );\n}\n\nasync function selectOptions(selector: string, values: string[], description?: string): Promise<void> {\n  await runInPage(\n    (sel: string, valueList: string[], label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!(element instanceof HTMLSelectElement)) {\n        return { error: `Element is not a <select>: ${label ?? sel}` };\n      }\n\n      const targets = new Set(valueList);\n      let matched = 0;\n      for (const option of Array.from(element.options)) {\n        const shouldSelect =\n          targets.has(option.value) || targets.has(option.label) || targets.has(option.textContent ?? \"\");\n        if (shouldSelect) {\n          option.selected = true;\n          matched++;\n          if (!element.multiple) {\n            break;\n          }\n        } else if (!element.multiple) {\n          option.selected = false;\n        }\n      }\n\n      if (matched === 0) {\n        return { error: \"None of the provided values matched\" };\n      }\n\n      element.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n\n      return { ok: true };\n    },\n    [selector, values, description ?? null],\n  );\n}\n\nasync function takeScreenshot(fullPage: boolean): Promise<{ data: string; mimeType: string }> {\n  const tab = await ensureTab();\n  let base64: string | undefined;\n\n  if (canUseDebugger()) {\n    try {\n      base64 = await captureScreenshotWithDebugger(tab.id!, fullPage);\n    } catch (error) {\n      console.warn(\"[yetibrowser] debugger capture failed, falling back\", error);\n    }\n  }\n\n  if (!base64) {\n    base64 = await captureVisibleTabFallback(tab.windowId!);\n  }\n\n  return await encodeScreenshot(base64);\n}\n\nfunction canUseDebugger(): boolean {\n  const manifest = chrome.runtime.getManifest();\n  const permissions = Array.isArray(manifest.permissions) ? manifest.permissions : [];\n  const optionalPermissions = Array.isArray(manifest.optional_permissions) ? manifest.optional_permissions : [];\n  if (!permissions.includes(\"debugger\") && !optionalPermissions.includes(\"debugger\")) {\n    return false;\n  }\n  return typeof chrome.debugger?.attach === \"function\";\n}\n\nconst DEBUGGER_PROTOCOL_VERSION = \"1.3\";\n\nasync function captureScreenshotWithDebugger(tabId: number, fullPage: boolean): Promise<string | undefined> {\n  const target: chrome.debugger.Debuggee = { tabId };\n  await attachDebugger(target);\n  let metricsOverridden = false;\n\n  try {\n    await sendDebuggerCommand(target, \"Page.enable\");\n\n    if (fullPage) {\n      try {\n        const metrics = await sendDebuggerCommand<{ contentSize?: { width?: number; height?: number } }>(\n          target,\n          \"Page.getLayoutMetrics\",\n        );\n        const width = Math.ceil(metrics.contentSize?.width ?? 0);\n        const height = Math.ceil(metrics.contentSize?.height ?? 0);\n        if (width > 0 && height > 0) {\n          await sendDebuggerCommand(target, \"Emulation.setDeviceMetricsOverride\", {\n            mobile: false,\n            deviceScaleFactor: 1,\n            width,\n            height,\n            screenWidth: width,\n            screenHeight: height,\n            viewport: {\n              x: 0,\n              y: 0,\n              width,\n              height,\n              scale: 1,\n            },\n          });\n          metricsOverridden = true;\n        }\n      } catch (error) {\n        console.warn(\"[yetibrowser] layout metrics unavailable, skipping full-page override\", error);\n      }\n    }\n\n    const screenshot = await sendDebuggerCommand<{ data: string }>(target, \"Page.captureScreenshot\", {\n      format: \"png\",\n      captureBeyondViewport: fullPage,\n    });\n\n    if (metricsOverridden) {\n      await sendDebuggerCommand(target, \"Emulation.clearDeviceMetricsOverride\");\n    }\n\n    return screenshot.data;\n  } finally {\n    await detachDebugger(target);\n  }\n}\n\nasync function captureVisibleTabFallback(windowId: number): Promise<string> {\n  if (windowId === undefined) {\n    throw new Error(\"Unable to determine window for active tab\");\n  }\n\n  const dataUrl = await new Promise<string>((resolve, reject) => {\n    chrome.tabs.captureVisibleTab(windowId, { format: \"png\" }, (result) => {\n      const error = chrome.runtime.lastError;\n      if (error) {\n        reject(new Error(error.message));\n        return;\n      }\n      if (!result) {\n        reject(new Error(\"Failed to capture screenshot\"));\n        return;\n      }\n      resolve(result);\n    });\n  });\n\n  const [, base64] = dataUrl.split(\",\");\n  if (!base64) {\n    throw new Error(\"Unexpected screenshot data format\");\n  }\n  return base64;\n}\n\nasync function attachDebugger(target: chrome.debugger.Debuggee): Promise<void> {\n  await new Promise<void>((resolve, reject) => {\n    chrome.debugger.attach(target, DEBUGGER_PROTOCOL_VERSION, () => {\n      const error = chrome.runtime.lastError;\n      if (error) {\n        if (error.message?.includes(\"Another debugger is already attached\")) {\n          resolve();\n          return;\n        }\n        reject(new Error(error.message));\n        return;\n      }\n      resolve();\n    });\n  });\n}\n\nasync function detachDebugger(target: chrome.debugger.Debuggee): Promise<void> {\n  await new Promise<void>((resolve) => {\n    chrome.debugger.detach(target, () => {\n      const error = chrome.runtime.lastError;\n      if (error && !error.message?.includes(\"No debugger is connected\")) {\n        console.warn(\"[yetibrowser] failed to detach debugger\", error);\n      }\n      resolve();\n    });\n  });\n}\n\nasync function encodeScreenshot(base64Png: string): Promise<{ data: string; mimeType: string }> {\n  const bytes = Uint8Array.from(atob(base64Png), (char) => char.charCodeAt(0));\n  const blob = new Blob([bytes], { type: \"image/png\" });\n  const bitmap = await createImageBitmap(blob);\n\n  const maxWidth = 1280;\n  const scale = bitmap.width > maxWidth ? maxWidth / bitmap.width : 1;\n  const targetWidth = Math.round(bitmap.width * scale);\n  const targetHeight = Math.round(bitmap.height * scale);\n\n  const canvas = new OffscreenCanvas(targetWidth, targetHeight);\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    throw new Error(\"Unable to create drawing context for screenshot\");\n  }\n  ctx.drawImage(bitmap, 0, 0, targetWidth, targetHeight);\n\n  let outputBlob: Blob;\n  let mimeType = \"image/webp\";\n  try {\n    outputBlob = await canvas.convertToBlob({ type: \"image/webp\", quality: 0.85 });\n  } catch (error) {\n    console.warn(\"[yetibrowser] webp conversion failed, falling back to jpeg\", error);\n    outputBlob = await canvas.convertToBlob({ type: \"image/jpeg\", quality: 0.85 });\n    mimeType = \"image/jpeg\";\n  }\n\n  const arrayBuffer = await outputBlob.arrayBuffer();\n  const outputBytes = new Uint8Array(arrayBuffer);\n  let binary = \"\";\n  outputBytes.forEach((byte) => {\n    binary += String.fromCharCode(byte);\n  });\n  return { data: btoa(binary), mimeType };\n}\n\nasync function sendDebuggerCommand<T>(\n  target: chrome.debugger.Debuggee,\n  method: string,\n  params?: Record<string, unknown>,\n): Promise<T> {\n  return await new Promise<T>((resolve, reject) => {\n    chrome.debugger.sendCommand(target, method, params, (result) => {\n      const error = chrome.runtime.lastError;\n      if (error) {\n        reject(new Error(error.message));\n        return;\n      }\n      resolve((result ?? {}) as T);\n    });\n  });\n}\n\nasync function readConsoleLogs(): Promise<ConsoleLogEntry[]> {\n  const tab = await ensureTab();\n  await ensurePageHelpers(tab.id!);\n  const logs = await runInPage(() => {\n    const win = window as typeof window & { __yetibrowser?: { logs?: ConsoleLogEntry[] } };\n    const entries = Array.isArray(win.__yetibrowser?.logs) ? win.__yetibrowser!.logs! : [];\n    return { ok: true, value: entries.slice(-200) };\n  }, []);\n  return logs ?? [];\n}\n\nasync function initializeTab(tabId: number): Promise<void> {\n  try {\n    await ensurePageHelpers(tabId);\n  } catch (error) {\n    console.warn(\"[yetibrowser] failed to initialize tab helpers\", error);\n  }\n  void updateBadge();\n}\n\nasync function ensurePageHelpers(tabId: number): Promise<void> {\n  await chrome.scripting.executeScript({\n    target: { tabId },\n    world: \"MAIN\",\n    func: () => {\n      const win = window as typeof window & {\n        __yetibrowser?: {\n          initialized?: boolean;\n          logs: ConsoleLogEntry[];\n        };\n      };\n\n      const install = () => {\n        const maxEntries = 500;\n        const state = win.__yetibrowser ?? { logs: [] as ConsoleLogEntry[] };\n        const logs = Array.isArray(state.logs) ? state.logs : [];\n\n        const originals = {\n          log: console.log.bind(console),\n          info: console.info.bind(console),\n          warn: console.warn.bind(console),\n          error: console.error.bind(console),\n        };\n\n        const serialize = (value: unknown) => {\n          if (typeof value === \"string\") {\n            return value;\n          }\n          if (value instanceof Error) {\n            return value.message;\n          }\n          try {\n            const serialized = JSON.stringify(value);\n            return serialized ?? String(value);\n          } catch (error) {\n            return String(value);\n          }\n        };\n\n        const extractStack = (values: unknown[]): string | undefined => {\n          for (const value of values) {\n            if (value instanceof Error && value.stack) {\n              return value.stack;\n            }\n            if (typeof value === \"string\" && value.includes(\"\\n    at \")) {\n              return value;\n            }\n          }\n          return undefined;\n        };\n\n        const pushEntry = (\n          level: keyof typeof originals,\n          args: unknown[],\n          explicitStack?: string,\n        ) => {\n          const message = args\n            .map((arg) => serialize(arg))\n            .filter((part) => part.length > 0)\n            .join(\" \") || level;\n          const stack = explicitStack ?? extractStack(args);\n          logs.push({ level, message, timestamp: Date.now(), stack });\n          if (logs.length > maxEntries) {\n            logs.shift();\n          }\n        };\n\n        const wrap = (level: keyof typeof originals) =>\n          (...args: unknown[]) => {\n            pushEntry(level, args);\n            originals[level](...args);\n          };\n\n        console.log = wrap(\"log\") as typeof console.log;\n        console.info = wrap(\"info\") as typeof console.info;\n        console.warn = wrap(\"warn\") as typeof console.warn;\n        console.error = wrap(\"error\") as typeof console.error;\n\n        window.addEventListener(\"error\", (event) => {\n          const details: unknown[] = [event.message];\n          if (event.filename) {\n            const locationParts = [event.filename];\n            if (typeof event.lineno === \"number\") {\n              locationParts.push(String(event.lineno));\n            }\n            if (typeof event.colno === \"number\") {\n              locationParts.push(String(event.colno));\n            }\n            details.push(locationParts.join(\":\"));\n          }\n          const stack = event.error instanceof Error ? event.error.stack ?? undefined : undefined;\n          pushEntry(\"error\", details, stack);\n          originals.error(event.message, event.error ?? event);\n        });\n\n        window.addEventListener(\"unhandledrejection\", (event) => {\n          const reason = event.reason;\n          let message: string;\n          let stack: string | undefined;\n          if (reason instanceof Error) {\n            message = reason.message;\n            stack = reason.stack ?? undefined;\n          } else {\n            message = serialize(reason);\n          }\n          pushEntry(\"error\", [\"Unhandled promise rejection\", message], stack);\n          originals.error(\"Unhandled promise rejection\", reason);\n        });\n\n        logs.push({ level: \"debug\", message: \"[yetibrowser] console hooks installed\", timestamp: Date.now() });\n\n        win.__yetibrowser = {\n          initialized: true,\n          logs,\n        };\n      };\n\n      if (!win.__yetibrowser?.initialized) {\n        install();\n        return;\n      }\n\n      if (!Array.isArray(win.__yetibrowser.logs)) {\n        install();\n      }\n    },\n  });\n\n  const tab = await chrome.tabs.get(tabId);\n  if (tab.url?.startsWith(\"chrome://\") || tab.url?.startsWith(\"edge://\") || tab.url?.startsWith(\"about:\")) {\n    console.warn(\"[yetibrowser] unable to inject helpers into special page\", tab.url);\n  }\n}\n\nasync function updateBadge(): Promise<void> {\n  const isConnected = connectedTabId !== null && socketStatus === \"open\";\n  try {\n    const text = isConnected ? \"●\" : \"\";\n    await chrome.action.setBadgeText({ text });\n    if (isConnected) {\n      try {\n        await chrome.action.setBadgeBackgroundColor({ color: \"#111827\" });\n      } catch (error) {\n        console.warn(\"[yetibrowser] failed to set badge background\", error);\n      }\n      if (chrome.action.setBadgeTextColor) {\n        try {\n          await chrome.action.setBadgeTextColor({ color: \"#facc15\" });\n        } catch (error) {\n          console.warn(\"[yetibrowser] failed to set badge text color\", error);\n        }\n      }\n    }\n  } catch (error) {\n    console.warn(\"[yetibrowser] failed to set badge\", error);\n  }\n}\n"],"mappings":"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","names":["delay"]}